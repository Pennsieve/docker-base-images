input {
  cloudwatch_logs {
    log_group => [ "dev-kube" ]
    codec => "json"
    type => "kube"
    tags => "kube_cloudwatch_logs"
    add_field => {
      "[blackfynn][environment_name]" => "dev"
    }
  }

  cloudwatch_logs {
    log_group => [ "prod-kube" ]
    codec => "json"
    type => "kube"
    tags => "kube_cloudwatch_logs"
    add_field => {
      "[blackfynn][environment_name]" => "prod"
    }
  }
}

filter {
  if [type] == "kube" {

    if ("" in [kubernetes][namespace_name]) {

      if [log] !~ /.+/ { drop { } }

      mutate { add_field => { "message" => "%{log}"} }
      mutate { add_field => { "original_message" => "%{message}"} }
      mutate { add_field => { "processed" => "no"} }
      mutate { add_field => { "[blackfynn][service_name]" => "%{[kubernetes][namespace_name]}"} }
      mutate { add_field => { "[blackfynn][tier]" => "%{[kubernetes][container_name]}"} }
      mutate { remove_field => [ "log" ] }
    }

    if [blackfynn][service_name] == "notifications" {
          grok {
            match => [ "message", "\[%{TIMESTAMP_ISO8601:cat2actualtimestamp}\] \[%{DATA:thread}\] \[%{LOGLEVEL:loglevel}\] \[%{DATA:logger}\] - \[%{DATA}\] %{DATA}\{%{GREEDYDATA:kvstats}\}" ]
          }

      if "_grokparsefailure" not in [tags] {
        date { match => [ "cat2actualtimestamp", "ISO8601" ] }
        mutate { replace => { "log_type" => "stats" } }
  
        kv {
          source => "kvstats"
          prefix => "stats_"
          remove_char_value => ","
        }
  
        mutate { replace => { "processed" => "yes"} }
        mutate { replace => { "message" => "%{kvstats}" } }
        mutate { remove_field => [ "kvstats" ] }

      } else {
        mutate { remove_tag => [ "_grokparsefailure" ] }
      }
    }

    if [processed] == "no" {
      grok {
        match => [ "message", "\[%{TIMESTAMP_ISO8601:cat2actualtimestamp}\] \[%{DATA:thread}\] \[%{LOGLEVEL:loglevel}\] \[%{DATA:logger}\] - %{GREEDYDATA:log_message}" ]
      }
    }

    if "_grokparsefailure" not in [tags] and [processed] == "no"   {
      mutate { replace => { "processed" => "yes"} }
      date { match => [ "cat2actualtimestamp", "ISO8601" ] }
      mutate { replace => { "message" => "%{log_message}" } }
      mutate { remove_field => [ "log_message" ] }

      if [logger] == "com.blackfynn.janusgraph.metrics" {
        drop {}
        #mutate { replace => { "processed" => "no"} }
        #grok {
        #  match => [ "message", "%{WORD}=%{WORD:metric_type}, %{WORD}=%{WORD}\.%{HOSTNAME:metric_prefix}, %{GREEDYDATA:kvstats}" ]
        #}

        #if "_grokparsefailure" not in [tags] {
        #  mutate { replace => { "log_type" => "stats" } }

        #  mutate { gsub => [ "metric_prefix", "\.", "_" ] }

        #  kv {
        #    source => "kvstats"
        #    prefix => "%{metric_prefix}_"
        #    remove_char_value => ","
        #  }

        #  mutate { replace => { "processed" => "yes"} }
        #  mutate { replace => { "message" => "%{kvstats}" } }
        #  mutate { remove_field => [ "kvstats" ] }
        #}
      }
      mutate { remove_field => [ "processed" ] }
    }
  }
}

output {
  elasticsearch {
    hosts => ["ops-elk-data-use100.blackfynn.io:9200","ops-elk-data-use101.blackfynn.io:9200","ops-elk-data-use102.blackfynn.io:9200"]
    #document_id => "%{[@metadata][fingerprint]}"
  }
}
