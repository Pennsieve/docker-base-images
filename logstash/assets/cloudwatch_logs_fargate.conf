input {
  cloudwatch_logs {
    log_group => [
      "/fargate/dev-etl-nextflow-task-use1",
      "/fargate/prod-etl-nextflow-task-use1"
    ]
    type => "fargate"
    tags => [ "json" ]
  }
}

filter {
  if [type] == "fargate" {

    mutate { add_field => { "original_message" => "%{message}"} }

    mutate { gsub => [ "message", "\u001b", "" ] }
    mutate { gsub => [ "message", "[\n\r]", " " ] }

    json {
      source => "message"
    }

    grok {
      match => [ "[cloudwatch_logs][log_group]", "/%{DATA}/%{DATA}-%{DATA}-%{GREEDYDATA:[blackfynn][tier]}-%{DATA}-%{DATA}" ]
    }

    # The json filter removes any field it doesn't create so we recreate them here
    #if "_jsonparsefailure" not in [tags] {
    #  grok {
    #    match => [ "[batch][job]", "%{DATA:[blackfynn][environment_name]}-%{DATA:[blackfynn][service_name]}-%{GREEDYDATA:[blackfynn][tier]}-%{DATA}-%{DATA}" ]
    #  }
    #}
  }
}

output {
  elasticsearch {
    hosts => ["ops-elk-data-use100.blackfynn.io:9200","ops-elk-data-use101.blackfynn.io:9200","ops-elk-data-use102.blackfynn.io:9200"]
    document_id => "%{[@metadata][fingerprint]}"
  }
}
