input {
  s3 {
    add_field => { "[blackfynn][environment_name]" => "prod" }
    #backup_to_bucket => "blackfynn-prod-archive"
    bucket => "blackfynn-prod-logs"
    delete => false
    prefix => "prod/app/uploads/s3/prod-uploads-blackfynn/daily/data/"
    region => "us-east-1"
    tags => [ "aws" ]
    type => "s3-analytics"
  }
}

filter {
  if [type] == "s3-analytics" {
    csv {
      columns => [
        "bucket_name",
        "s3_key",
        "size",
        "timestamp",
        "s3_storage_type"
      ]

      convert => { 
        "size" => "float"
      }
    }

    date {
      match => ["timestamp", "ISO8601"]
    }

    mutate {
      copy => { "s3_key" => "split_s3_key" }
    }

    mutate {
      split => [ "split_s3_key", "/" ]
    }

    ruby {
      code => 'event.set("key_length", event.get("split_s3_key").length)'
    }

    if [key_length] == 4 {
      mutate {
        add_field => [ "username", "%{split_s3_key[0]}" ]
        add_field => [ "upload_uuid", "%{split_s3_key[1]}" ]
        add_field => [ "set_id", "%{split_s3_key[2]}" ]
        add_field => [ "filename", "%{split_s3_key[3]}" ]
      }

    } else if [key_length] == 3 {
      mutate {
        add_field => [ "username", "%{split_s3_key[0]}" ]
        add_field => [ "upload_uuid", "%{split_s3_key[1]}" ]
        add_field => [ "filename", "%{split_s3_key[2]}" ]
      }
    }

    mutate {
      gsub => [ "username", "%40", "@" ]
    }

    mutate {
      copy => { "filename" => "split_filename" }
    }

    mutate {
      split => [ "split_filename", "." ]
    }

    ruby {
      code => 'event.set("file_extentsion", event.get("split_filename").last(2)'
    }

    if ".gz" in [split_filename] { 
      mutate {
        add_field => [ "file_extension", "%{split_filename}" ]
      }

    } else {
      mutate {
        add_field => [ "file_extension", "%{split_filename[1]}" ]
      }
    }

    mutate {
      remove_field => [ "filename_length" ]
      remove_field => [ "key_length" ]
      remove_field => [ "split_filename" ]
      remove_field => [ "split_s3_key" ]
    }
  }
}

output {
  elasticsearch {
    hosts => ["ops-elk-data-use100.blackfynn.io:9200","ops-elk-data-use101.blackfynn.io:9200","ops-elk-data-use102.blackfynn.io:9200"]
    document_id => "%{[@metadata][fingerprint]}"
  }
}
